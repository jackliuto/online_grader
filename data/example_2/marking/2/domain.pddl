
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Domain file automatically generated by the Tarski FSTRIPS writer
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define (domain Rover)
    (:requirements :negative-preconditions :equality :typing)
    (:types
        rover - object
        waypoint - object
        store - object
        camera - object
        mode - object
        lander - object
        objective - object
        object
    )

    (:constants
        
    )

    (:predicates
        (domain1_at ?x1 - rover ?x2 - waypoint)
        (domain1_at_lander ?x1 - lander ?x2 - waypoint)
        (domain1_can_traverse ?x1 - rover ?x2 - waypoint ?x3 - waypoint)
        (domain1_equipped_for_soil_analysis ?x1 - rover)
        (domain1_equipped_for_rock_analysis ?x1 - rover)
        (domain1_equipped_for_imaging ?x1 - rover)
        (domain1_empty ?x1 - store)
        (domain1_have_rock_analysis ?x1 - rover ?x2 - waypoint)
        (domain1_have_soil_analysis ?x1 - rover ?x2 - waypoint)
        (domain1_full ?x1 - store)
        (domain1_calibrated ?x1 - camera ?x2 - rover)
        (domain1_supports ?x1 - camera ?x2 - mode)
        (domain1_available ?x1 - rover)
        (domain1_visible ?x1 - waypoint ?x2 - waypoint)
        (domain1_have_image ?x1 - rover ?x2 - objective ?x3 - mode)
        (domain1_communicated_soil_data ?x1 - waypoint)
        (domain1_communicated_rock_data ?x1 - waypoint)
        (domain1_communicated_image_data ?x1 - objective ?x2 - mode)
        (domain1_at_soil_sample ?x1 - waypoint)
        (domain1_at_rock_sample ?x1 - waypoint)
        (domain1_visible_from ?x1 - objective ?x2 - waypoint)
        (domain1_store_of ?x1 - store ?x2 - rover)
        (domain1_calibration_target ?x1 - camera ?x2 - objective)
        (domain1_on_board ?x1 - camera ?x2 - rover)
        (domain1_channel_free ?x1 - lander)
        (domain2_at ?x1 - rover ?x2 - waypoint)
        (domain2_at_lander ?x1 - lander ?x2 - waypoint)
        (domain2_can_traverse ?x1 - rover ?x2 - waypoint ?x3 - waypoint)
        (domain2_equipped_for_soil_analysis ?x1 - rover)
        (domain2_equipped_for_rock_analysis ?x1 - rover)
        (domain2_equipped_for_imaging ?x1 - rover)
        (domain2_empty ?x1 - store)
        (domain2_have_rock_analysis ?x1 - rover ?x2 - waypoint)
        (domain2_have_soil_analysis ?x1 - rover ?x2 - waypoint)
        (domain2_full ?x1 - store)
        (domain2_calibrated ?x1 - camera ?x2 - rover)
        (domain2_supports ?x1 - camera ?x2 - mode)
        (domain2_available ?x1 - rover)
        (domain2_visible ?x1 - waypoint ?x2 - waypoint)
        (domain2_have_image ?x1 - rover ?x2 - objective ?x3 - mode)
        (domain2_communicated_soil_data ?x1 - waypoint)
        (domain2_communicated_rock_data ?x1 - waypoint)
        (domain2_communicated_image_data ?x1 - objective ?x2 - mode)
        (domain2_at_soil_sample ?x1 - waypoint)
        (domain2_at_rock_sample ?x1 - waypoint)
        (domain2_visible_from ?x1 - objective ?x2 - waypoint)
        (domain2_store_of ?x1 - store ?x2 - rover)
        (domain2_calibration_target ?x1 - camera ?x2 - objective)
        (domain2_on_board ?x1 - camera ?x2 - rover)
        (domain2_channel_free ?x1 - lander)
        (failed )
    )

    (:functions
        
    )

    

    
    (:action navigate
     :parameters (?x - rover ?y - waypoint ?z - waypoint)
     :precondition (and (and (domain1_can_traverse ?x ?y ?z) (domain1_available ?x) (domain1_at ?x ?y) (domain1_visible ?y ?z)) (and (domain2_can_traverse ?x ?y ?z) (domain2_available ?x) (domain2_at ?x ?y) (domain2_visible ?y ?z)))
     :effect (and
        (not (domain1_at ?x ?y))
        (domain1_at ?x ?z)
        (not (domain2_at ?x ?y))
        (domain2_at ?x ?z))
    )


    (:action sample_soil
     :parameters (?x - rover ?s - store ?p - waypoint)
     :precondition (and (and (domain1_at ?x ?p) (domain1_at_soil_sample ?p) (domain1_equipped_for_soil_analysis ?x) (domain1_store_of ?s ?x) (domain1_empty ?s)) (and (domain2_at ?x ?p) (domain2_at_soil_sample ?p) (domain2_equipped_for_soil_analysis ?x) (domain2_store_of ?s ?x) (domain2_empty ?s)))
     :effect (and
        (not (domain1_empty ?s))
        (domain1_full ?s)
        (domain1_have_soil_analysis ?x ?p)
        (not (domain1_at_soil_sample ?p))
        (not (domain2_empty ?s))
        (domain2_full ?s)
        (domain2_have_soil_analysis ?x ?p)
        (not (domain2_at_soil_sample ?p)))
    )


    (:action sample_rock
     :parameters (?x - rover ?s - store ?p - waypoint)
     :precondition (and (and (domain1_at ?x ?p) (domain1_at_rock_sample ?p) (domain1_equipped_for_rock_analysis ?x) (domain1_store_of ?s ?x) (domain1_empty ?s)) (and (domain2_at ?x ?p) (domain2_at_rock_sample ?p) (domain2_equipped_for_rock_analysis ?x) (domain2_store_of ?s ?x) (domain2_empty ?s)))
     :effect (and
        (not (domain1_empty ?s))
        (domain1_full ?s)
        (domain1_have_rock_analysis ?x ?p)
        (not (domain1_at_rock_sample ?p))
        (not (domain2_empty ?s))
        (domain2_full ?s)
        (domain2_have_rock_analysis ?x ?p)
        (not (domain2_at_rock_sample ?p)))
    )


    (:action drop
     :parameters (?x - rover ?y - store)
     :precondition (and (and (domain1_store_of ?y ?x) (domain1_full ?y)) (and (domain2_store_of ?y ?x) (domain2_full ?y)))
     :effect (and
        (not (domain1_full ?y))
        (domain1_empty ?y)
        (domain2_empty ?y))
    )


    (:action calibrate
     :parameters (?r - rover ?i - camera ?t - objective ?w - waypoint)
     :precondition (and (and (domain1_equipped_for_imaging ?r) (domain1_calibration_target ?i ?t) (domain1_at ?r ?w) (domain1_visible_from ?t ?w) (domain1_on_board ?i ?r)) (and (domain2_equipped_for_imaging ?r) (domain2_calibration_target ?i ?t) (domain2_at ?r ?w) (domain2_visible_from ?t ?w) (domain2_on_board ?i ?r)))
     :effect (and
        (domain1_calibrated ?i ?r)
        (domain2_calibrated ?i ?r))
    )


    (:action take_image
     :parameters (?r - rover ?p - waypoint ?o - objective ?i - camera ?m - mode)
     :precondition (and (and (domain1_calibrated ?i ?r) (domain1_on_board ?i ?r) (domain1_equipped_for_imaging ?r) (domain1_supports ?i ?m) (domain1_visible_from ?o ?p) (domain1_at ?r ?p)) (and (domain2_calibrated ?i ?r) (domain2_on_board ?i ?r) (domain2_equipped_for_imaging ?r) (domain2_supports ?i ?m) (domain2_visible_from ?o ?p) (domain2_at ?r ?p)))
     :effect (and
        (domain1_have_image ?r ?o ?m)
        (not (domain1_calibrated ?i ?r))
        (domain2_have_image ?r ?o ?m)
        (not (domain2_calibrated ?i ?r)))
    )


    (:action communicate_soil_data
     :parameters (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
     :precondition (and (and (domain1_at ?r ?x) (domain1_at_lander ?l ?y) (domain1_have_soil_analysis ?r ?p) (domain1_visible ?x ?y) (domain1_available ?r) (domain1_channel_free ?l)) (and (domain2_at ?r ?x) (domain2_at_lander ?l ?y) (domain2_have_soil_analysis ?r ?p) (domain2_visible ?x ?y) (domain2_available ?r) (domain2_channel_free ?l)))
     :effect (and
        (not (domain1_available ?r))
        (not (domain1_channel_free ?l))
        (domain1_channel_free ?l)
        (domain1_communicated_soil_data ?p)
        (domain1_available ?r)
        (not (domain2_available ?r))
        (not (domain2_channel_free ?l))
        (domain2_channel_free ?l)
        (domain2_communicated_soil_data ?p)
        (domain2_available ?r))
    )


    (:action communicate_rock_data
     :parameters (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
     :precondition (and (and (domain1_at ?r ?x) (domain1_at_lander ?l ?y) (domain1_have_rock_analysis ?r ?p) (domain1_visible ?x ?y) (domain1_available ?r) (domain1_channel_free ?l)) (and (domain2_at ?r ?x) (domain2_at_lander ?l ?y) (domain2_have_rock_analysis ?r ?p) (domain2_visible ?x ?y) (domain2_available ?r) (domain2_channel_free ?l)))
     :effect (and
        (not (domain1_available ?r))
        (not (domain1_channel_free ?l))
        (domain1_channel_free ?l)
        (domain1_communicated_rock_data ?p)
        (domain1_available ?r)
        (not (domain2_available ?r))
        (not (domain2_channel_free ?l))
        (domain2_channel_free ?l)
        (domain2_communicated_rock_data ?p)
        (domain2_available ?r))
    )


    (:action communicate_image_data
     :parameters (?r - rover ?l - lander ?o - objective ?m - mode ?x - waypoint ?y - waypoint)
     :precondition (and (and (domain1_at ?r ?x) (domain1_at_lander ?l ?y) (domain1_have_image ?r ?o ?m) (domain1_visible ?x ?y) (domain1_available ?r) (domain1_channel_free ?l)) (and (domain2_at ?r ?x) (domain2_at_lander ?l ?y) (domain2_have_image ?r ?o ?m) (domain2_visible ?x ?y) (domain2_available ?r) (domain2_channel_free ?l)))
     :effect (and
        (not (domain1_available ?r))
        (not (domain1_channel_free ?l))
        (domain1_channel_free ?l)
        (domain1_communicated_image_data ?o ?m)
        (domain1_available ?r)
        (not (domain2_available ?r))
        (not (domain2_channel_free ?l))
        (domain2_channel_free ?l)
        (domain2_communicated_image_data ?o ?m)
        (domain2_available ?r))
    )


    (:action fail_navigate1
     :parameters (?x - rover ?y - waypoint ?z - waypoint)
     :precondition (and (not (and (domain2_can_traverse ?x ?y ?z) (domain2_available ?x) (domain2_at ?x ?y) (domain2_visible ?y ?z))) (and (domain1_can_traverse ?x ?y ?z) (domain1_available ?x) (domain1_at ?x ?y) (domain1_visible ?y ?z)))
     :effect (and
        (failed ))
    )


    (:action fail_sample_soil1
     :parameters (?x - rover ?s - store ?p - waypoint)
     :precondition (and (not (and (domain2_at ?x ?p) (domain2_at_soil_sample ?p) (domain2_equipped_for_soil_analysis ?x) (domain2_store_of ?s ?x) (domain2_empty ?s))) (and (domain1_at ?x ?p) (domain1_at_soil_sample ?p) (domain1_equipped_for_soil_analysis ?x) (domain1_store_of ?s ?x) (domain1_empty ?s)))
     :effect (and
        (failed ))
    )


    (:action fail_sample_rock1
     :parameters (?x - rover ?s - store ?p - waypoint)
     :precondition (and (not (and (domain2_at ?x ?p) (domain2_at_rock_sample ?p) (domain2_equipped_for_rock_analysis ?x) (domain2_store_of ?s ?x) (domain2_empty ?s))) (and (domain1_at ?x ?p) (domain1_at_rock_sample ?p) (domain1_equipped_for_rock_analysis ?x) (domain1_store_of ?s ?x) (domain1_empty ?s)))
     :effect (and
        (failed ))
    )


    (:action fail_drop1
     :parameters (?x - rover ?y - store)
     :precondition (and (not (and (domain2_store_of ?y ?x) (domain2_full ?y))) (and (domain1_store_of ?y ?x) (domain1_full ?y)))
     :effect (and
        (failed ))
    )


    (:action fail_calibrate1
     :parameters (?r - rover ?i - camera ?t - objective ?w - waypoint)
     :precondition (and (not (and (domain2_equipped_for_imaging ?r) (domain2_calibration_target ?i ?t) (domain2_at ?r ?w) (domain2_visible_from ?t ?w) (domain2_on_board ?i ?r))) (and (domain1_equipped_for_imaging ?r) (domain1_calibration_target ?i ?t) (domain1_at ?r ?w) (domain1_visible_from ?t ?w) (domain1_on_board ?i ?r)))
     :effect (and
        (failed ))
    )


    (:action fail_take_image1
     :parameters (?r - rover ?p - waypoint ?o - objective ?i - camera ?m - mode)
     :precondition (and (not (and (domain2_calibrated ?i ?r) (domain2_on_board ?i ?r) (domain2_equipped_for_imaging ?r) (domain2_supports ?i ?m) (domain2_visible_from ?o ?p) (domain2_at ?r ?p))) (and (domain1_calibrated ?i ?r) (domain1_on_board ?i ?r) (domain1_equipped_for_imaging ?r) (domain1_supports ?i ?m) (domain1_visible_from ?o ?p) (domain1_at ?r ?p)))
     :effect (and
        (failed ))
    )


    (:action fail_communicate_soil_data1
     :parameters (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
     :precondition (and (not (and (domain2_at ?r ?x) (domain2_at_lander ?l ?y) (domain2_have_soil_analysis ?r ?p) (domain2_visible ?x ?y) (domain2_available ?r) (domain2_channel_free ?l))) (and (domain1_at ?r ?x) (domain1_at_lander ?l ?y) (domain1_have_soil_analysis ?r ?p) (domain1_visible ?x ?y) (domain1_available ?r) (domain1_channel_free ?l)))
     :effect (and
        (failed ))
    )


    (:action fail_communicate_rock_data1
     :parameters (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
     :precondition (and (not (and (domain2_at ?r ?x) (domain2_at_lander ?l ?y) (domain2_have_rock_analysis ?r ?p) (domain2_visible ?x ?y) (domain2_available ?r) (domain2_channel_free ?l))) (and (domain1_at ?r ?x) (domain1_at_lander ?l ?y) (domain1_have_rock_analysis ?r ?p) (domain1_visible ?x ?y) (domain1_available ?r) (domain1_channel_free ?l)))
     :effect (and
        (failed ))
    )


    (:action fail_communicate_image_data1
     :parameters (?r - rover ?l - lander ?o - objective ?m - mode ?x - waypoint ?y - waypoint)
     :precondition (and (not (and (domain2_at ?r ?x) (domain2_at_lander ?l ?y) (domain2_have_image ?r ?o ?m) (domain2_visible ?x ?y) (domain2_available ?r) (domain2_channel_free ?l))) (and (domain1_at ?r ?x) (domain1_at_lander ?l ?y) (domain1_have_image ?r ?o ?m) (domain1_visible ?x ?y) (domain1_available ?r) (domain1_channel_free ?l)))
     :effect (and
        (failed ))
    )


    (:action fail_navigate2
     :parameters (?x - rover ?y - waypoint ?z - waypoint)
     :precondition (and (not (and (domain1_can_traverse ?x ?y ?z) (domain1_available ?x) (domain1_at ?x ?y) (domain1_visible ?y ?z))) (and (domain2_can_traverse ?x ?y ?z) (domain2_available ?x) (domain2_at ?x ?y) (domain2_visible ?y ?z)))
     :effect (and
        (failed ))
    )


    (:action fail_sample_soil2
     :parameters (?x - rover ?s - store ?p - waypoint)
     :precondition (and (not (and (domain1_at ?x ?p) (domain1_at_soil_sample ?p) (domain1_equipped_for_soil_analysis ?x) (domain1_store_of ?s ?x) (domain1_empty ?s))) (and (domain2_at ?x ?p) (domain2_at_soil_sample ?p) (domain2_equipped_for_soil_analysis ?x) (domain2_store_of ?s ?x) (domain2_empty ?s)))
     :effect (and
        (failed ))
    )


    (:action fail_sample_rock2
     :parameters (?x - rover ?s - store ?p - waypoint)
     :precondition (and (not (and (domain1_at ?x ?p) (domain1_at_rock_sample ?p) (domain1_equipped_for_rock_analysis ?x) (domain1_store_of ?s ?x) (domain1_empty ?s))) (and (domain2_at ?x ?p) (domain2_at_rock_sample ?p) (domain2_equipped_for_rock_analysis ?x) (domain2_store_of ?s ?x) (domain2_empty ?s)))
     :effect (and
        (failed ))
    )


    (:action fail_drop2
     :parameters (?x - rover ?y - store)
     :precondition (and (not (and (domain1_store_of ?y ?x) (domain1_full ?y))) (and (domain2_store_of ?y ?x) (domain2_full ?y)))
     :effect (and
        (failed ))
    )


    (:action fail_calibrate2
     :parameters (?r - rover ?i - camera ?t - objective ?w - waypoint)
     :precondition (and (not (and (domain1_equipped_for_imaging ?r) (domain1_calibration_target ?i ?t) (domain1_at ?r ?w) (domain1_visible_from ?t ?w) (domain1_on_board ?i ?r))) (and (domain2_equipped_for_imaging ?r) (domain2_calibration_target ?i ?t) (domain2_at ?r ?w) (domain2_visible_from ?t ?w) (domain2_on_board ?i ?r)))
     :effect (and
        (failed ))
    )


    (:action fail_take_image2
     :parameters (?r - rover ?p - waypoint ?o - objective ?i - camera ?m - mode)
     :precondition (and (not (and (domain1_calibrated ?i ?r) (domain1_on_board ?i ?r) (domain1_equipped_for_imaging ?r) (domain1_supports ?i ?m) (domain1_visible_from ?o ?p) (domain1_at ?r ?p))) (and (domain2_calibrated ?i ?r) (domain2_on_board ?i ?r) (domain2_equipped_for_imaging ?r) (domain2_supports ?i ?m) (domain2_visible_from ?o ?p) (domain2_at ?r ?p)))
     :effect (and
        (failed ))
    )


    (:action fail_communicate_soil_data2
     :parameters (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
     :precondition (and (not (and (domain1_at ?r ?x) (domain1_at_lander ?l ?y) (domain1_have_soil_analysis ?r ?p) (domain1_visible ?x ?y) (domain1_available ?r) (domain1_channel_free ?l))) (and (domain2_at ?r ?x) (domain2_at_lander ?l ?y) (domain2_have_soil_analysis ?r ?p) (domain2_visible ?x ?y) (domain2_available ?r) (domain2_channel_free ?l)))
     :effect (and
        (failed ))
    )


    (:action fail_communicate_rock_data2
     :parameters (?r - rover ?l - lander ?p - waypoint ?x - waypoint ?y - waypoint)
     :precondition (and (not (and (domain1_at ?r ?x) (domain1_at_lander ?l ?y) (domain1_have_rock_analysis ?r ?p) (domain1_visible ?x ?y) (domain1_available ?r) (domain1_channel_free ?l))) (and (domain2_at ?r ?x) (domain2_at_lander ?l ?y) (domain2_have_rock_analysis ?r ?p) (domain2_visible ?x ?y) (domain2_available ?r) (domain2_channel_free ?l)))
     :effect (and
        (failed ))
    )


    (:action fail_communicate_image_data2
     :parameters (?r - rover ?l - lander ?o - objective ?m - mode ?x - waypoint ?y - waypoint)
     :precondition (and (not (and (domain1_at ?r ?x) (domain1_at_lander ?l ?y) (domain1_have_image ?r ?o ?m) (domain1_visible ?x ?y) (domain1_available ?r) (domain1_channel_free ?l))) (and (domain2_at ?r ?x) (domain2_at_lander ?l ?y) (domain2_have_image ?r ?o ?m) (domain2_visible ?x ?y) (domain2_available ?r) (domain2_channel_free ?l)))
     :effect (and
        (failed ))
    )

)